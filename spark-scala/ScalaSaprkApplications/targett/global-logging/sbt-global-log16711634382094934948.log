[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Oracle Corporation Java 21.0.2)
[debug] Load.defaultLoad until apply took 35.891875ms
[debug]           Load.loadUnit: plugins took 27.386208ms
[debug]           Load.loadUnit: defsScala took 0.17525ms
[debug] [Loading] Scanning directory /Users/krishnaiv/iLab/all_java/spark-scala/ScalaSaprkApplications/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/krishnaiv/iLab/all_java/spark-scala/ScalaSaprkApplications/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 7.325959 ms
[debug]               Load.resolveProject(scalasaprkapplications-build) took 22.360958ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalasaprkapplications-build, base: /Users/krishnaiv/iLab/all_java/spark-scala/ScalaSaprkApplications/project, plugins: List(<none>))) took 39.2555ms
[debug] [Loading] Done in /Users/krishnaiv/iLab/all_java/spark-scala/ScalaSaprkApplications/project, returning: (scalasaprkapplications-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 47.626375ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.086167ms
[debug]         Load.loadUnit(file:/Users/krishnaiv/iLab/all_java/spark-scala/ScalaSaprkApplications/project/, ...) took 77.720875ms
[debug]       Load.apply: load took 211.262ms
[debug]       Load.apply: resolveProjects took 2.580125ms
[debug]       Load.apply: finalTransforms took 32.738084ms
[debug]       Load.apply: config.delegates took 2.952416ms
[debug]       Load.apply: Def.make(settings)... took 174.855625ms
[debug]       Load.apply: structureIndex took 39.878625ms
[debug]       Load.apply: mkStreams took 0.637584ms
[info] loading project definition from /Users/krishnaiv/iLab/all_java/spark-scala/ScalaSaprkApplications/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 804.398625ms
[debug]     Load.loadUnit: defsScala took 0.0015ms
[debug] [Loading] Scanning directory /Users/krishnaiv/iLab/all_java/spark-scala/ScalaSaprkApplications
[debug]       Load.loadUnit: mkEval took 5.83225ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.784917 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 1.139875ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /Users/krishnaiv/iLab/all_java/spark-scala/ScalaSaprkApplications, plugins: List(<none>))) took 2.294375ms
[debug] [Loading] Done in /Users/krishnaiv/iLab/all_java/spark-scala/ScalaSaprkApplications, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 860.875375ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.465958ms
[debug]   Load.loadUnit(file:/Users/krishnaiv/iLab/all_java/spark-scala/ScalaSaprkApplications/, ...) took 1668.345292ms
[debug] Load.apply: load took 1675.075125ms
[debug] Load.apply: resolveProjects took 0.066417ms
[debug] Load.apply: finalTransforms took 6.112542ms
[debug] Load.apply: config.delegates took 0.174667ms
[debug] Load.apply: Def.make(settings)... took 83.934208ms
[debug] Load.apply: structureIndex took 15.51025ms
[debug] Load.apply: mkStreams took 0.001459ms
[info] set current project to ScalaSaprkApplications (in build file:/Users/krishnaiv/iLab/all_java/spark-scala/ScalaSaprkApplications/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///Users/krishnaiv/.sbt/1.0/server/24c1cf5be9a6a696b532/sock
[debug] Writing bsp connection file
[info] started sbt server
